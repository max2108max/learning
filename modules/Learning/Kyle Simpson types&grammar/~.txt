ПОБИТОВОЕ НЕ

~ сначала "приводит" к 32-разрядному значению number, а затем выполняет побитовое отрицание (инвертируя каждый бит).
Другими словами, ~, используемая с разными значениями number, даст ложное значение 0 (легко приводимое к false) для входного значения -1
 В любом другом случае мы значение number будет правдивым.

var a = "Hello World";

if (a.indexOf( "lo" ) >= 0) {	// true
	// нашёл!
}

if (a.indexOf( "ol" ) < 0) {	// true
	// не нашёл!
}





indexOf если нашел то возвращает индекс где нашел 
        а если не нашел то -1 


var a = "Hello World";

~a.indexOf( "lo" );			// -4   <-- правдивое!

if (~a.indexOf( "lo" )) {	// true
	// нашёл!
}

~a.indexOf( "ol" );			// 0    <-- ложное!
!~a.indexOf( "ol" );		// true

if (!~a.indexOf( "ol" )) {	// true
	// не нашёл!
}

если indexOf -1 то  =====> ~ преобразует в ложный 0!!!



никогда не используйте parseInt(..) со значением, отличным от string.
Если вы передаете значение, отличное от string, то оно сначала автоматически приводится в string

parseInt( 0.000008 );		// 0   ("0" из "0.000008")
parseInt( 0.0000008 );		// 8   ("8" из "8e-7")
parseInt( false, 16 );		// 250 ("fa" из "false")
parseInt( parseInt, 16 );	// 15  ("f" из "function..")

parseInt( "0x10" );			// 16
parseInt( "103", 2 );		// 2